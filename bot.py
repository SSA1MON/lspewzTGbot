import sqlite3
import telebot.types
import func

from telebot import types, TeleBot
from config import TOKEN
from time import sleep
from datetime import datetime

bot = TeleBot(TOKEN)
conn = sqlite3.connect('database.db', check_same_thread=False)
cursor = conn.cursor()

cur_month = datetime.now().strftime("%d-%B-%Y %H:%M").split('-')[1].lower()


@bot.message_handler(commands=['start'])
def start(message: telebot.types.Message) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start
    """

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    btn1 = types.KeyboardButton("üíµ –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏—Ö–æ–¥")
    btn2 = types.KeyboardButton("üè¶ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ó–ü")
    btn3 = types.KeyboardButton("üóìÔ∏è –ù–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –º–µ—Å—è—Ü")
    markup.add(btn1, btn2, btn3)

    user_id = message.from_user.id
    func.db_table_val(month=cur_month, perv=0, garant=0, holod=0, artem=0, cleanmoney=0,
                      nonprofile=0, curbtn="None", usr_id=user_id)
    bot.send_message(message.chat.id,
                     text=f"Wassup, <b>{message.from_user.first_name}</b>!\n",
                     reply_markup=markup, parse_mode='html')


@bot.message_handler(content_types=['text'])
def main(message: telebot.types.Message, msg: str = None) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –æ—Ç –∫–Ω–æ–ø–æ–∫ –≤ –º–µ–Ω—é, –ø—Ä–∏ –Ω–∞—á–∞–ª–µ –¥–∏–∞–ª–æ–≥–∞ —Å –±–æ—Ç–æ–º (/start)
    """

    user_id = message.from_user.id
    if message.text == "–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏—Ö–æ–¥" or msg == "–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∏—Ö–æ–¥":
        markup = types.InlineKeyboardMarkup(row_width=2)
        button1 = types.InlineKeyboardButton("–ü–µ—Ä–≤–∏—á–∫–∞", callback_data=f'pervichka|{user_id}')
        button2 = types.InlineKeyboardButton("–ì–∞—Ä–∞–Ω—Ç–∏—è", callback_data=f'garant|{user_id}')
        button3 = types.InlineKeyboardButton("–•–æ–ª–æ–¥", callback_data=f'holod|{user_id}')
        button4 = types.InlineKeyboardButton("–ê—Ä—Ç—ë–º", callback_data=f'artem|{user_id}')
        button5 = types.InlineKeyboardButton("–ß–∏—Å—Ç—ã–µ –¥–µ–Ω—å–≥–∏", callback_data=f'cleanmoney|{user_id}')
        button6 = types.InlineKeyboardButton("–ù–µ–ø—Ä–æ—Ñ–∏–ª—å", callback_data=f'nonprofile|{user_id}')
        markup.add(button1, button2, button3, button4, button5, button6)
        bot.send_message(chat_id=message.chat.id, text="–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=markup)

    elif message.text == "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ó–ü" or msg == "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ó–ü":
        markup = types.InlineKeyboardMarkup(row_width=2)
        button1 = types.InlineKeyboardButton("–Ø–Ω–≤–∞—Ä—å", callback_data=f'january|{user_id}')
        button2 = types.InlineKeyboardButton("–§–µ–≤—Ä–∞–ª—å", callback_data=f'february|{user_id}')
        button3 = types.InlineKeyboardButton("–ú–∞—Ä—Ç", callback_data=f'march|{user_id}')
        button4 = types.InlineKeyboardButton("–ê–ø—Ä–µ–ª—å", callback_data=f'april|{user_id}')
        button5 = types.InlineKeyboardButton("–ú–∞–π", callback_data=f'may|{user_id}')
        button6 = types.InlineKeyboardButton("–ò—é–Ω—å", callback_data=f'june|{user_id}')
        button7 = types.InlineKeyboardButton("–ò—é–ª—å", callback_data=f'july|{user_id}')
        button8 = types.InlineKeyboardButton("–ê–≤–≥—É—Å—Ç", callback_data=f'august|{user_id}')
        button9 = types.InlineKeyboardButton("–°–µ–Ω—Ç—è–±—Ä—å", callback_data=f'september|{user_id}')
        button10 = types.InlineKeyboardButton("–û–∫—Ç—è–±—Ä—å", callback_data=f'october|{user_id}')
        button11 = types.InlineKeyboardButton("–ù–æ—è–±—Ä—å", callback_data=f'november|{user_id}')
        button12 = types.InlineKeyboardButton("–î–µ–∫–∞–±—Ä—å", callback_data=f'december|{user_id}')
        markup.add(button1, button2, button3, button4, button5, button6,
                   button7, button8, button9, button10, button11, button12)
        bot.send_message(chat_id=message.chat.id, text="–í—ã–±–µ—Ä–∏ –º–µ—Å—è—Ü:", reply_markup=markup)

    elif message.text == "–ù–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –º–µ—Å—è—Ü" or msg == "–ù–∞—á–∞—Ç—å –Ω–æ–≤—ã–π –º–µ—Å—è—Ü":
        bot.send_message(chat_id=message.chat.id, text="–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.")

    else:
        bot.send_message(message.chat.id,
                         text=f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —è –Ω–µ —Å–º–æ–≥ —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ç–≤–æ—é –∫–æ–º–∞–Ω–¥—É.")


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call: telebot.types.CallbackQuery) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –æ—Ç –∫–Ω–æ–ø–æ–∫ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ main().
    """
    try:
        user_id = call.data.split('|')[1]
        if call.message:
            if call.data.startswith('pervichka'):
                bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.id)
                func.DatabaseData(msg=call.message, btn="pervichka", user=user_id).db_update_button()
                bot.send_message(chat_id=call.message.chat.id, text="–í–≤–µ–¥–∏ —Å—É–º–º—É:")
                bot.register_next_step_handler(message=call.message, callback=func.answer_handler)

            elif call.data.startswith('garant'):
                bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.id)
                func.DatabaseData(msg=call.message, btn="garant", user=user_id).db_update_button()
                bot.send_message(chat_id=call.message.chat.id, text="–í–≤–µ–¥–∏ —Å—É–º–º—É:")
                bot.register_next_step_handler(message=call.message, callback=func.answer_handler)

            elif call.data.startswith('holod'):
                bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.id)
                func.DatabaseData(msg=call.message, btn="holod", user=user_id).db_update_button()
                bot.send_message(chat_id=call.message.chat.id, text="–í–≤–µ–¥–∏ —Å—É–º–º—É:")
                bot.register_next_step_handler(message=call.message, callback=func.answer_handler)

            elif call.data.startswith('artem'):
                bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.id)
                func.DatabaseData(msg=call.message, btn="artem", user=user_id).db_update_button()
                bot.send_message(chat_id=call.message.chat.id, text="–í–≤–µ–¥–∏ —Å—É–º–º—É:")
                bot.register_next_step_handler(message=call.message, callback=func.answer_handler)

            elif call.data.startswith('cleanmoney'):
                bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.id)
                func.DatabaseData(msg=call.message, btn="cleanmoney", user=user_id).db_update_button()
                bot.send_message(chat_id=call.message.chat.id, text="–í–≤–µ–¥–∏ —Å—É–º–º—É:")
                bot.register_next_step_handler(message=call.message, callback=func.answer_handler)

            elif call.data.startswith('nonprofile'):
                bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.id)
                func.DatabaseData(msg=call.message, btn="nonprofile", user=user_id).db_update_button()
                bot.send_message(chat_id=call.message.chat.id, text="–í–≤–µ–¥–∏ —Å—É–º–º—É:")
                bot.register_next_step_handler(message=call.message, callback=func.answer_handler)

            elif call.data.startswith(('january', 'february', 'march', 'april', 'may', 'june',
                                       'july', 'august', 'september', 'october', 'november', 'december')):
                bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.id)
                total_salary = func.DatabaseData(msg=call.message,
                                                 user=user_id,
                                                 month=call.data.split('|')[0]
                                                 ).db_get_total_sum()
                if total_salary is not None:
                    bot.send_message(chat_id=call.message.chat.id,
                                     text=f"–°—É–º–º–∞ –∑–∞ {call.data.split('|')[0]}: {total_salary} —Ä—É–±–ª–µ–π.")
                else:
                    bot.send_message(chat_id=call.message.chat.id, text=f"üíæ –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö")
    except Exception as ex:
        bot.send_message(call.message.chat.id, text=f"–û—à–∏–±–∫–∞: {ex}")


if __name__ == '__main__':
    while True:
        try:
            bot.infinity_polling(timeout=10, long_polling_timeout=5)
        except Exception:
            bot.close()
            sleep(15)
            continue
