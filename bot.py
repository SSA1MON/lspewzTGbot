import sqlite3
import telebot.types
import buttons as btn
import func

from telebot import types, TeleBot
from config import TOKEN
from settings_dict import month_dict, category_dict
from time import sleep

bot = TeleBot(token=TOKEN, parse_mode='Markdown')
conn = sqlite3.connect(database='database.db', check_same_thread=False)
cursor = conn.cursor()


@bot.message_handler(commands=['start'])
def start(message: telebot.types.Message) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start.

    Parameters:
        message (telebot.types.Message): –°–ª—É–∂–µ–±–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ telebot.
    Returns:
        None
    """

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    btn1 = types.KeyboardButton(text=btn.check_salary)
    btn2 = types.KeyboardButton(text=btn.average_receipt)
    btn3 = types.KeyboardButton(text=btn.add_cash)
    markup.add(btn1, btn2, btn3)

    func.write_log(user_id=message.from_user.id, func_name=start.__name__, text="–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º")
    # —Å–æ–∑–¥–∞–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∫–Ω–æ–ø–∫—É –º–µ–Ω—é
    bot.set_my_commands([telebot.types.BotCommand("/start", "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞")])
    # —Å–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É –≤ –±–¥, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    func.DatabaseData(msg=message, user=message.from_user.id).db_update_month_column()
    bot.send_message(chat_id=message.chat.id, text=f"Wassup, *{message.from_user.first_name}*!", reply_markup=markup)


@bot.message_handler(content_types=['text'])
def main(message: telebot.types.Message) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –æ—Ç –∫–Ω–æ–ø–æ–∫ –≤ –º–µ–Ω—é, –ø—Ä–∏ –Ω–∞—á–∞–ª–µ –¥–∏–∞–ª–æ–≥–∞ —Å –±–æ—Ç–æ–º (/start)

    Parameters:
        message (telebot.types.Message): –°–ª—É–∂–µ–±–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ telebot.
    Returns:
        None
    """

    user_id = message.from_user.id
    if message.text == btn.add_cash:
        func.write_log(user_id=message.from_user.id, func_name=main.__name__,
                       text=f"–í—ã–±—Ä–∞–Ω–∞ –∫–Ω–æ–ø–∫–∞ '{btn.add_cash}'")
        markup = types.InlineKeyboardMarkup(row_width=2)
        btn1 = types.InlineKeyboardButton("–ü–µ—Ä–≤–∏—á–∫–∞", callback_data=f'{btn.pervichka}|{user_id}')
        btn2 = types.InlineKeyboardButton("–ì–∞—Ä–∞–Ω—Ç–∏—è", callback_data=f'{btn.garant}|{user_id}')
        btn3 = types.InlineKeyboardButton("–•–æ–ª–æ–¥", callback_data=f'{btn.holod}|{user_id}')
        btn4 = types.InlineKeyboardButton("–ó–∞—è–≤–û–ß–ö–ê", callback_data=f'{btn.zayavochka}|{user_id}')
        btn5 = types.InlineKeyboardButton("–ß–∏—Å—Ç—ã–µ –¥–µ–Ω—å–≥–∏", callback_data=f'{btn.clean_money}|{user_id}')
        btn6 = types.InlineKeyboardButton("–ù–µ–ø—Ä–æ—Ñ–∏–ª—å", callback_data=f'{btn.non_profile}|{user_id}')
        markup.add(btn1, btn2, btn3, btn4, btn5, btn6)
        bot.send_message(chat_id=message.chat.id, text="–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é üëá", reply_markup=markup)

    elif message.text == btn.check_salary:
        func.write_log(user_id=message.from_user.id, func_name=main.__name__,
                       text=f"–í—ã–±—Ä–∞–Ω–∞ –∫–Ω–æ–ø–∫–∞ '{btn.check_salary}'")
        markup = types.InlineKeyboardMarkup(row_width=2)
        btn1 = types.InlineKeyboardButton("–Ø–Ω–≤–∞—Ä—å", callback_data=f'january|{user_id}')
        btn2 = types.InlineKeyboardButton("–§–µ–≤—Ä–∞–ª—å", callback_data=f'february|{user_id}')
        btn3 = types.InlineKeyboardButton("–ú–∞—Ä—Ç", callback_data=f'march|{user_id}')
        btn4 = types.InlineKeyboardButton("–ê–ø—Ä–µ–ª—å", callback_data=f'april|{user_id}')
        btn5 = types.InlineKeyboardButton("–ú–∞–π", callback_data=f'may|{user_id}')
        btn6 = types.InlineKeyboardButton("–ò—é–Ω—å", callback_data=f'june|{user_id}')
        btn7 = types.InlineKeyboardButton("–ò—é–ª—å", callback_data=f'july|{user_id}')
        btn8 = types.InlineKeyboardButton("–ê–≤–≥—É—Å—Ç", callback_data=f'august|{user_id}')
        btn9 = types.InlineKeyboardButton("–°–µ–Ω—Ç—è–±—Ä—å", callback_data=f'september|{user_id}')
        btn10 = types.InlineKeyboardButton("–û–∫—Ç—è–±—Ä—å", callback_data=f'october|{user_id}')
        btn11 = types.InlineKeyboardButton("–ù–æ—è–±—Ä—å", callback_data=f'november|{user_id}')
        btn12 = types.InlineKeyboardButton("–î–µ–∫–∞–±—Ä—å", callback_data=f'december|{user_id}')
        markup.add(btn1, btn2, btn3, btn4, btn5, btn6, btn7, btn8, btn9, btn10, btn11, btn12)
        bot.send_message(chat_id=message.chat.id, text="–í—ã–±–µ—Ä–∏ –º–µ—Å—è—Ü üëá", reply_markup=markup)

    elif message.text == btn.average_receipt:
        func.write_log(user_id=message.from_user.id, func_name=main.__name__,
                       text=f"–í—ã–±—Ä–∞–Ω–∞ –∫–Ω–æ–ø–∫–∞ '{btn.average_receipt}'")
        data = func.DatabaseData(msg=message, user=user_id).db_calc_avg_sum()
        bot.send_message(
            chat_id=message.chat.id,
            text=f"–¢–≤–æ—è —Ç–µ–∫—É—â–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è ‚Äî _{data[0]}_\n\n–¢–≤–æ–π —Ç–µ–∫—É—â–∏–π —Å—Ä–µ–¥–Ω–∏–π —á–µ–∫:   *{data[1]} RUB*"
        )

    else:
        func.write_log(user_id=user_id, func_name=main.__name__,
                       text=f"–û—à–∏–±–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã. –ò—Å–ø–æ–ª–Ω–µ–Ω else. –í–≤–µ–¥–µ–Ω–æ: {message.text}")
        bot.send_message(chat_id=message.chat.id, text="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —è –Ω–µ —Å–º–æ–≥ —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ç–≤–æ—é –∫–æ–º–∞–Ω–¥—É.")


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call: telebot.types.CallbackQuery) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –æ—Ç –∫–Ω–æ–ø–æ–∫ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ main().

    Parameters:
        call (telebot.types.CallbackQuery): C–ª—É–∂–µ–±–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ telebot. –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ—Ç inline –∫–Ω–æ–ø–æ–∫.
    Returns:
        None
    """

    try:
        value = call.data.split('|')[0]
        user_id = call.data.split('|')[1]
        selected_button = None

        if call.message:
            bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.id)

            # –∞–ª–≥–æ—Ä–∏—Ç–º inline –∫–Ω–æ–ø–æ–∫ –≤–Ω—É—Ç—Ä–∏ "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ó–ü"
            if value in month_dict.keys():
                total_salary = func.DatabaseData(msg=call.message, user=user_id, month=value).db_get_total_sum()
                month = month_dict.get(value)

                if total_salary is not None:
                    func.write_log(user_id=int(user_id), func_name=callback_inline.__name__,
                                   text="–í—ã–≤–æ–¥ –∑–ø –∑–∞ " + month.upper())
                    bot.send_message(chat_id=call.message.chat.id,
                                     text=f"–¶–∏—Ñ—Ä—ã –∑–∞ *{month.upper()}:*\n\n"
                                          f"*‚ö° –ü–µ—Ä–≤–∏—á–∫–∞:*            {total_salary[0][0]}\n"
                                          f"*‚ö° –ì–∞—Ä–∞–Ω—Ç–∏—è:*             {total_salary[0][1]}\n"
                                          f"*‚ö° –•–æ–ª–æ–¥:*                     {total_salary[0][2]}\n"
                                          f"*‚ö° –ó–∞—è–≤–û–ß–ö–ê:*            {total_salary[0][3]}\n"
                                          f"*‚ö° –ß–∏—Å—Ç—ã–µ:*                   {total_salary[0][4]}\n"
                                          f"*‚ö° –ù–µ–ø—Ä–æ—Ñ–∏–ª—å:*         {total_salary[0][5]}\n\n"
                                          f"*–ò–¢–û–ì–û:*     {total_salary[1]} RUB")
                else:
                    func.write_log(user_id=int(user_id), func_name=callback_inline.__name__,
                                   text="–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ " + month.upper())
                    bot.send_message(chat_id=call.message.chat.id, text="üíæ –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö")
                return None

            msg_text = f"–í–≤–µ–¥–∏ —Å—É–º–º—É –¥–ª—è _{category_dict.get(value).upper()}_ üëá"

            if value == btn.pervichka:
                selected_button = btn.pervichka
            elif value == btn.garant:
                selected_button = btn.garant
            elif value == btn.holod:
                selected_button = btn.holod
            elif value == btn.zayavochka:
                selected_button = btn.zayavochka
                msg_text = f"–í–≤–µ–¥–∏ —Å—É–º–º—É –¥–ª—è _{category_dict.get(value).upper()}_\n(–≤ —Ñ–æ—Ä–º–∞—Ç–µ: _—Å—É–º–º–∞ –ø—Ä–æ—Ü–µ–Ω—Ç_) üëá"
            elif value == btn.clean_money:
                selected_button = btn.clean_money
            elif value == btn.non_profile:
                selected_button = btn.non_profile

            msg = bot.send_message(call.message.chat.id, msg_text)

            func.DatabaseData(msg=call.message, button=selected_button, user=user_id).db_update_button()
            bot.register_next_step_handler(msg, func.answer_handler)

    except Exception as ex:
        bot.send_message(chat_id=call.message.chat.id, text=f"–û—à–∏–±–∫–∞ –≤ callback_inline: {ex}")


if __name__ == '__main__':
    while True:
        try:
            print("Bot is running...")
            bot.infinity_polling(timeout=10, long_polling_timeout=5)
        except Exception:
            bot.close()
            sleep(15)
            continue
